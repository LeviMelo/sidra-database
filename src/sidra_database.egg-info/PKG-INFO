Metadata-Version: 2.4
Name: sidra-database
Version: 0.1.0
Summary: Local metadata store and search tooling for IBGE SIDRA tables
Author: Galaxy
Requires-Python: >=3.10
Description-Content-Type: text/markdown
Requires-Dist: httpx>=0.27
Requires-Dist: orjson>=3.9
Requires-Dist: pydantic>=2.6
Requires-Dist: sqlalchemy>=2.0
Requires-Dist: aiosqlite>=0.20
Requires-Dist: tenacity>=8.2
Requires-Dist: python-dotenv>=1.0
Provides-Extra: dev
Requires-Dist: pytest>=8.0; extra == "dev"
Requires-Dist: pytest-asyncio>=0.23; extra == "dev"
Requires-Dist: ruff>=0.5; extra == "dev"
Requires-Dist: mypy>=1.10; extra == "dev"

# SIDRA Database

Python toolkit for building a local SQLite metadata store and search layer for IBGE SIDRA agregados.

## Features
- Asynchronous client for the aggregated-data v3 API.
- SQLite schema and ingestion pipeline capturing tables, variables, classifications, periods, and localities.
- LM Studio embedding client for local vector generation (vectors stored only for agregados titles).
- Coverage-aware catalog of agregados, including municipality counts and national coverage flags.
- Hybrid search that blends agregados embeddings with lexical recall for variables, classifications, and categories.
- CLI helper to ingest, inspect, and search the catalog.
- Pytest, Ruff, and MyPy configuration for development.

## Quickstart
```bash
# Install in editable mode with dev extras
pip install -e .[dev]

# Ingest one or more agregados into SQLite
python -m sidra_database.cli ingest 6579 2093

# Run a semantic search against stored embeddings
python -m sidra_database.cli search "população por sexo" --types variable classification

# List agregados covering most municipalities
python -m sidra_database.cli list --requires-national-munis

# Ingest every table with UF or municipality coverage
python scripts/ingest_by_coverage.py

# Run tests and linters
pytest
ruff check src tests
mypy src
```

Configuration values can be supplied via a simple JSON file (`sidra.config.json`) or environment variables. Copy `sidra.config.json.example` to `sidra.config.json` and adjust values as needed. The CLI search command embeds the query once (agregados-only vectors) and blends the result with lexical matching so variables, classifications, and categories can surface even without dedicated embeddings. Use the `list` subcommand to quickly surface agregados whose municipality coverage exceeds the configured national threshold (`SIDRA_MUNICIPALITY_NATIONAL_THRESHOLD`, default 4000).

## Hybrid Search Cheatsheet
- `python -m sidra_database.cli search "esgoto saneamento"` — default hybrid mix of agregados plus lexical matches.
- `python -m sidra_database.cli search "população urbana" --types variable` — return only variable-level hits discovered via lexical recall.
- `python -m sidra_database.cli search "Tipo de emissário" --types classification --limit 10` — inspect classification metadata without embeddings.
- Combine filters such as `--requires-national-munis`, `--min-municipalities 5000`, or `--period-start 2010` to restrict the agregados eligible for lexical expansion.
- Because only agregados have stored vectors, use `--model` to switch embedding backends for table-level relevance; sub-entities will continue to rely on lexical scoring.

Each result reports semantic, lexical, and combined scores. When the combined score is close to the lexical score, the item entered the ranking via the textual enrichment path.

## Next-gen Value Atom search

A new additive package, `sidra_va`, materialises fine-grained Value Atoms that
capture variable + classification/category slices, territorial coverage and
period ranges. It ships its own CLI (`python -m sidra_va.cli`) for migrations,
indexing, embedding, searching and compatibility discovery. See
[docs/value_atoms.md](docs/value_atoms.md) for end-to-end instructions.
